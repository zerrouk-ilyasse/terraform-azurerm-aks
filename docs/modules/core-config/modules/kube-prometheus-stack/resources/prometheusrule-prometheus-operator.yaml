# source - https://github.com/monitoring-mixins/website/blob/master/assets/prometheus-operator/alerts.yaml
# last commit - 24/10/2020
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: prometheus-operator-rules
  namespace: monitoring
  labels:
    lnrs.io/k8s-platform: "true"
    lnrs.io/monitoring-platform: "true"
    lnrs.io/prometheus-rule: "true"
spec:
  groups:
    - name: prometheus-operator
      rules:
        - alert: PrometheusOperatorListErrors
          annotations:
            description: Errors while performing List operations in controller {{$labels.controller}} in {{$labels.namespace}} namespace.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/prometheusoperatorlisterrors
            summary: Errors while performing list operations in controller.
          expr: |
            (sum by (controller,namespace) (rate(prometheus_operator_list_operations_failed_total{job="prometheus-operator",namespace="monitoring"}[10m])) / sum by (controller,namespace) (rate(prometheus_operator_list_operations_total{job="prometheus-operator",namespace="monitoring"}[10m]))) > 0.4
          for: 15m
          labels:
            severity: warning
            corealert: "true"
            container: "{{ $labels.container }}"
            controller: "{{ $labels.controller }}"
            endpoint: "{{ $labels.endpoint }}"
            instance: "{{ $labels.instance }}"
            job: "{{ $labels.job }}"
            namespace: "{{ $labels.namespace }}"
            pod: "{{ $labels.pod }}"
            service: "{{ $labels.service }}"
        - alert: PrometheusOperatorWatchErrors
          annotations:
            description: Errors while performing watch operations in controller {{$labels.controller}} in {{$labels.namespace}} namespace.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/prometheusoperatorwatcherrors
            summary: Errors while performing watch operations in controller.
          expr: |
            (sum by (controller,namespace) (rate(prometheus_operator_watch_operations_failed_total{job="prometheus-operator",namespace="monitoring"}[10m])) / sum by (controller,namespace) (rate(prometheus_operator_watch_operations_total{job="prometheus-operator",namespace="monitoring"}[10m]))) > 0.4
          for: 15m
          labels:
            severity: warning
            corealert: "true"
            container: "{{ $labels.container }}"
            controller: "{{ $labels.controller }}"
            endpoint: "{{ $labels.endpoint }}"
            instance: "{{ $labels.instance }}"
            job: "{{ $labels.job }}"
            namespace: "{{ $labels.namespace }}"
            pod: "{{ $labels.pod }}"
            service: "{{ $labels.service }}"
        - alert: PrometheusOperatorSyncFailed
          annotations:
            description: Controller {{ $labels.controller }} in {{ $labels.namespace }} namespace fails to reconcile {{ $value }} objects.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/prometheusoperatorsyncfailed
            summary: Last controller reconciliation failed
          expr: |
            min_over_time(prometheus_operator_syncs{status="failed",job="prometheus-operator",namespace="monitoring"}[5m]) > 0
          for: 10m
          labels:
            severity: warning
            corealert: "true"
            container: "{{ $labels.container }}"
            controller: "{{ $labels.controller }}"
            endpoint: "{{ $labels.endpoint }}"
            instance: "{{ $labels.instance }}"
            job: "{{ $labels.job }}"
            namespace: "{{ $labels.namespace }}"
            pod: "{{ $labels.pod }}"
            service: "{{ $labels.service }}"
            status: "{{ $labels.failed }}"
        - alert: PrometheusOperatorReconcileErrors
          annotations:
            description: "{{ $value | humanizePercentage }} of reconciling operations failed for {{ $labels.controller }} controller in {{ $labels.namespace }} namespace."
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/prometheusoperatorreconcileerrors
            summary: Errors while reconciling controller.
          expr: |
            (sum by (controller,namespace) (rate(prometheus_operator_reconcile_errors_total{job="prometheus-operator",namespace="monitoring"}[5m]))) / (sum by (controller,namespace) (rate(prometheus_operator_reconcile_operations_total{job="prometheus-operator",namespace="monitoring"}[5m]))) > 0.1
          for: 10m
          labels:
            severity: warning
            corealert: "true"
            container: "{{ $labels.container }}"
            controller: "{{ $labels.controller }}"
            endpoint: "{{ $labels.endpoint }}"
            instance: "{{ $labels.instance }}"
            job: "{{ $labels.job }}"
            namespace: "{{ $labels.namespace }}"
            pod: "{{ $labels.pod }}"
            service: "{{ $labels.service }}"
        - alert: PrometheusOperatorNodeLookupErrors
          annotations:
            description: Errors while reconciling Prometheus in {{ $labels.namespace }} Namespace.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/prometheusoperatornodelookuperrors
            summary: Errors while reconciling Prometheus.
          expr: |
            rate(prometheus_operator_node_address_lookup_errors_total{job="prometheus-operator",namespace="monitoring"}[5m]) > 0.1
          for: 10m
          labels:
            severity: warning
            corealert: "true"
            container: "{{ $labels.container }}"
            controller: "{{ $labels.controller }}"
            endpoint: "{{ $labels.endpoint }}"
            instance: "{{ $labels.instance }}"
            job: "{{ $labels.job }}"
            namespace: "{{ $labels.namespace }}"
            pod: "{{ $labels.pod }}"
            service: "{{ $labels.service }}"
        - alert: PrometheusOperatorNotReady
          annotations:
            description: Prometheus operator in {{ $labels.namespace }} namespace isn't ready to reconcile {{ $labels.controller }} resources.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/prometheusoperatornotready
            summary: Prometheus operator not ready
          expr: |
            min by(namespace, controller) (max_over_time(prometheus_operator_ready{job="prometheus-operator",namespace="monitoring"}[5m]) == 0)
          for: 5m
          labels:
            severity: warning
            corealert: "true"
            container: "{{ $labels.container }}"
            controller: "{{ $labels.controller }}"
            endpoint: "{{ $labels.endpoint }}"
            instance: "{{ $labels.instance }}"
            job: "{{ $labels.job }}"
            namespace: "{{ $labels.namespace }}"
            pod: "{{ $labels.pod }}"
            service: "{{ $labels.service }}"
        - alert: PrometheusOperatorRejectedResources
          annotations:
            description: Prometheus operator in {{ $labels.namespace }} namespace rejected {{ printf "%0.0f" $value }} {{ $labels.controller }}/{{ $labels.resource }} resources.
            runbook_url: https://runbooks.prometheus-operator.dev/runbooks/prometheus-operator/prometheusoperatorrejectedresources
            summary: Resources rejected by Prometheus operator
          expr: |
            min_over_time(prometheus_operator_managed_resources{state="rejected",job="prometheus-operator",namespace="monitoring"}[5m]) > 0
          for: 5m
          labels:
            severity: warning
            corealert: "true"
            container: "{{ $labels.container }}"
            controller: "{{ $labels.controller }}"
            endpoint: "{{ $labels.endpoint }}"
            instance: "{{ $labels.instance }}"
            job: "{{ $labels.job }}"
            namespace: "{{ $labels.namespace }}"
            pod: "{{ $labels.pod }}"
            service: "{{ $labels.service }}"
            resource: "{{ $labels.resource }}"
            state: "{{ $labels.state }}"
